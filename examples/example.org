#+title: Bevy Example
#+startup: content
#+author: Gaeric
#+HTML_HEAD: <link href="./worg.css" rel="stylesheet" type="text/css">
#+HTML_HEAD: <link href="/static/css/worg.css" rel="stylesheet" type="text/css">
#+OPTIONS: ^:{}
* Intro
  本文档以示例说明bevy完成一个tps游戏时所用到的基础知识
* Content
** 1.1.0 资源导入
   使用asset_loader导入资源，并在游戏中生成对应的实体
** 1.1.1 角色移动
   使用bevy-tnua来控制角色的移动
** 1.1.2 相机控制
   需要使用第三人称控制时，使用bevy_dolly插件

   需要使用第一人称控制时，使用bevy_fps_controller插件
** 1.1.3 物理引擎
   使用avian3d做为物理引擎
** 1.1.4 按键映射
   使用leafwing-input-manager或bevy_enhanced_input做为输入到事件的映射关系
** 1.1.5 UI界面
* Crates
  本节记录一些crate的笔记
** avian
   默认使用avian作为物理引擎

   如何设置碰撞体的位置令人迷惑，应该需要一个方法来处理这个问题
** tnua
   使用对角色的控制的封装和处理

   注意目前在foxtrot中发现，使用tnua控制时，角色的阴影发生形变
** bevy_enhandced_input
   提供keyboard和gamepad到控制系统的映射的封装
** bevy_dolly
   这是一个平滑相机移动的crate，但是目前不确定是否需要在tps中使用他
** bevy_transform_interpolation
* Archive
* Plugins
* Reference
  foxtrot历史版本中使用的插件参考：
  - A 3D character controller via [`bevy-tnua`](https://crates.io/crates/bevy-tnua)
  - Physics via [`bevy_xpbd`](https://crates.io/crates/bevy_xpbd_3d)
  - Audio via [`bevy_kira_audio`](https://crates.io/crates/bevy_kira_audio)
  - Pathfinding via [`oxidized_navigation`](https://crates.io/crates/oxidized_navigation)
  - [`bevy_editor_pls`](https://crates.io/crates/bevy_editor_pls) bound to 'Q'
  - Custom editor found in the windows selection for `bevy_editor_pls`.
  - Animations
  - Dialogs via [`Yarn Spinner for Rust`](https://crates.io/crates/bevy_yarnspinner)
  - Shaders, using the code from [DGriffin's tutorial](https://www.youtube.com/watch?v=O6A_nVmpvhc)
  - GLTF imports, including auto-insertion of markers via the GLTF extras field
  - Smooth cameras via [`bevy_dolly`](https://crates.io/crates/bevy_dolly)
  - Simple error handling via [`bevy_mod_sysfail`](https://crates.io/crates/bevy_mod_sysfail)
  - Particle effects via [`bevy_hanabi`](https://crates.io/crates/bevy_hanabi)
  - Procedural skies via [`bevy_atmosphere`](https://crates.io/crates/bevy_atmosphere)
  - Grass via [`warbler_grass`](https://crates.io/crates/warbler_grass)
  - Integration with Blender as an editor via
    the [`Blender_bevy_components_workflow`](https://github.com/kaosat-dev/Blender_bevy_components_workflow) set of tools


